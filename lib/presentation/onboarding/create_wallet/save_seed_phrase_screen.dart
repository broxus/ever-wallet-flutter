import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:nekoton_flutter/nekoton_flutter.dart';

import '../../common/constants.dart';
import '../../common/general/button/primary_button.dart';
import '../../common/general/onboarding_appbar.dart';
import '../../common/widgets/crystal_flushbar.dart';
import '../../util/extensions/context_extensions.dart';
import '../../util/extensions/iterable_extensions.dart';
import '../../util/theme_styles.dart';
import '../widgets/onboarding_background.dart';
import 'check_seed_phrase_screen/check_seed_phase_screen.dart';

class SaveSeedPhraseRoute extends MaterialPageRoute<void> {
  SaveSeedPhraseRoute(String phraseName)
      : super(
          builder: (_) => SaveSeedPhraseScreen(phraseName: phraseName),
        );
}

/// !!! Here displays only 12 words
class SaveSeedPhraseScreen extends StatefulWidget {
  final String phraseName;

  const SaveSeedPhraseScreen({Key? key, required this.phraseName}) : super(key: key);

  @override
  State<SaveSeedPhraseScreen> createState() => _SaveSeedPhraseScreenState();
}

class _SaveSeedPhraseScreenState extends State<SaveSeedPhraseScreen> {
  final key = generateKey(kDefaultMnemonicType);

  List<String> get words => key.words;

  @override
  Widget build(BuildContext context) {
    final localization = context.localization;
    final themeStyle = context.themeStyle;

    return OnboardingBackground(
      child: Scaffold(
        backgroundColor: Colors.transparent,
        appBar: const OnboardingAppBar(),
        body: Padding(
          padding: const EdgeInsets.all(16),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Text(localization.save_seed_phrase, style: themeStyle.styles.appbarStyle),
              const SizedBox(height: 16),
              Text(
                // TODO: change text
                'It is the series of words generated by your cryptocurrency wallet that give you access to the crypto associated with that wallet',
                style: themeStyle.styles.basicStyle,
              ),
              const SizedBox(height: 32),
              Expanded(
                child: SingleChildScrollView(
                  child: Row(
                    children: [
                      Expanded(
                        child: Column(
                          children: words
                              .getRange(0, 6)
                              .mapIndex((word, i) => _textPair(word, i + 1, themeStyle))
                              .toList(),
                        ),
                      ),
                      Expanded(
                        child: Column(
                          children: words
                              .getRange(6, 12)
                              .mapIndex((word, i) => _textPair(word, i + 7, themeStyle))
                              .toList(),
                        ),
                      ),
                    ],
                  ),
                ),
              ),
              PrimaryButton(
                text: localization.copy_words,
                onPressed: () {
                  Clipboard.setData(ClipboardData(text: words.join(' ')));
                  showFlushbar(context, message: localization.copied);
                },
                isTransparent: true,
              ),
              const SizedBox(height: 12),
              PrimaryButton(
                text: localization.confirm_seed_saved,
                onPressed: () => Navigator.of(context).push(
                  CheckSeedPhraseRoute(words, widget.phraseName),
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }

  Widget _textPair(String word, int index, ThemeStyle themeStyle) {
    final style = themeStyle.styles.basicStyle;
    final colors = themeStyle.colors;
    return Padding(
      padding: const EdgeInsets.only(bottom: 24),
      child: Row(
        children: [
          SizedBox(
            width: 28,
            child: Text(
              '$index.',
              style: style.copyWith(color: colors.textSecondaryTextButtonColor),
            ),
          ),
          Expanded(
            child: Text(word, style: style, textAlign: TextAlign.left),
          ),
        ],
      ),
    );
  }
}
